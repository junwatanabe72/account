var E=Object.defineProperty;var J=(o,a,t)=>a in o?E(o,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[a]=t;var b=(o,a,t)=>J(o,typeof a!="symbol"?a+"":a,t);import{A as k,T as I,J as v,d as F,s as $,p as M,j as l}from"./assets/index-DNcHv8Gn.js";import{r as N}from"./chunk-DJ1oPbzn.js";import{d as R}from"./chunk-xo-tfjFm.js";import{B as P}from"./chunk-D7WOVkBo.js";import{v as D,P as O}from"./chunk-DMm3EenX.js";import{c as U}from"./chunk-B6LuprgX.js";const B=(o,a)=>({engine:null,isInitialized:!1,lastUpdate:null,initializeEngine:()=>{const t=new k;o({engine:t,isInitialized:!0,lastUpdate:new Date}),console.log("AccountingEngine initialized")},resetEngine:()=>{const t=new k;t.clearAll(),o({engine:t,isInitialized:!1,lastUpdate:new Date}),console.log("AccountingEngine reset")},updateEngine:t=>{const{engine:e}=a();if(!e){console.error("Engine not initialized");return}t(e),o({engine:e,lastUpdate:new Date})}}),z=(o,a)=>({bankAccounts:[],bankAccountService:null,syncResult:null,initializeBankAccounts:()=>{const t=new P(R);t.addChangeListener(e=>{console.log(`Bank account ${e.type}:`,e.account.code),o({bankAccounts:t.getAccounts(!0),lastUpdate:new Date})}),o({bankAccountService:t,bankAccounts:t.getAccounts(!0)}),console.log("BankAccountService initialized with",t.getAccounts().length,"accounts")},addBankAccount:t=>{var n,s;const e=a().bankAccountService;if(!e){const i="BankAccountService not initialized";return o({error:i}),{success:!1,errors:[i]}}const r=e.addAccount(t);return r.success?(o({bankAccounts:e.getAccounts(!0),syncResult:r,lastUpdate:new Date}),a().showToast("success",`口座「${t.name}」を追加しました`)):(o({syncResult:r,error:((n=r.errors)==null?void 0:n.join(`
`))||"口座の追加に失敗しました"}),a().showToast("error",((s=r.errors)==null?void 0:s.join(`
`))||"口座の追加に失敗しました")),r},updateBankAccount:(t,e)=>{var s,i;const r=a().bankAccountService;if(!r){const c="BankAccountService not initialized";return o({error:c}),{success:!1,errors:[c]}}const n=r.updateAccount(t,e);return n.success?(o({bankAccounts:r.getAccounts(!0),syncResult:n,lastUpdate:new Date}),a().showToast("success","口座情報を更新しました")):(o({syncResult:n,error:((s=n.errors)==null?void 0:s.join(`
`))||"口座の更新に失敗しました"}),a().showToast("error",((i=n.errors)==null?void 0:i.join(`
`))||"口座の更新に失敗しました")),n},disableBankAccount:t=>{var s,i;const e=a().bankAccountService;if(!e){const c="BankAccountService not initialized";return o({error:c}),{success:!1,errors:[c]}}const r=e.getAccount(t),n=e.disableAccount(t);if(n.success){o({bankAccounts:e.getAccounts(!0),syncResult:n,lastUpdate:new Date});let c=`口座「${r==null?void 0:r.name}」を無効化しました`;n.affectedTransactions&&n.affectedTransactions.length>0&&(c+=`
${n.affectedTransactions.length}件の取引が影響を受けます`);const u=n.errors&&n.errors.length>0?"warning":"success";a().showToast(u,c)}else o({syncResult:n,error:((s=n.errors)==null?void 0:s.join(`
`))||"口座の無効化に失敗しました"}),a().showToast("error",((i=n.errors)==null?void 0:i.join(`
`))||"口座の無効化に失敗しました");return n},enableBankAccount:t=>{var s,i;const e=a().bankAccountService;if(!e){const c="BankAccountService not initialized";return o({error:c}),{success:!1,errors:[c]}}const r=e.getAccount(t),n=e.enableAccount(t);return n.success?(o({bankAccounts:e.getAccounts(!0),syncResult:n,lastUpdate:new Date}),a().showToast("success",`口座「${r==null?void 0:r.name}」を有効化しました`)):(o({syncResult:n,error:((s=n.errors)==null?void 0:s.join(`
`))||"口座の有効化に失敗しました"}),a().showToast("error",((i=n.errors)==null?void 0:i.join(`
`))||"口座の有効化に失敗しました")),n},deleteBankAccount:(t,e=!1)=>{var i,c,u;const r=a().bankAccountService;if(!r){const m="BankAccountService not initialized";return o({error:m}),{success:!1,errors:[m]}}const n=r.getAccount(t),s=r.deleteAccount(t,e);return s.success?(o({bankAccounts:r.getAccounts(!0),syncResult:s,lastUpdate:new Date}),a().showToast("success",`口座「${n==null?void 0:n.name}」を削除しました`)):(o({syncResult:s,error:((i=s.errors)==null?void 0:i.join(`
`))||"口座の削除に失敗しました"}),s.affectedTransactions&&s.affectedTransactions.length>0?a().showToast("warning",((c=s.errors)==null?void 0:c.join(`
`))||"関連する取引があります"):a().showToast("error",((u=s.errors)==null?void 0:u.join(`
`))||"口座の削除に失敗しました")),s},refreshBankAccounts:()=>{const t=a().bankAccountService;if(!t){console.error("BankAccountService not initialized");return}o({bankAccounts:t.getAccounts(!0),lastUpdate:new Date})}}),L=(o,a)=>({transactions:[],transactionService:null,selectedTransaction:null,initializeTransactions:()=>{const{engine:t,bankAccountService:e}=a();if(!t){console.error("Engine not initialized");return}const r=t.journals?{createJournal:(s,i)=>({success:!0,data:{id:`j_${Date.now()}`,...s}})}:null;if(!r){console.error("JournalService not available");return}const n=new I(t.accounts,r,e||void 0);o({transactionService:n,transactions:[]}),console.log("TransactionService initialized")},createTransaction:async t=>{var r;const e=a().transactionService;if(!e){const n="TransactionService not initialized";return o({error:n}),{success:!1,errors:[n]}}o({isLoading:!0});try{if(t.paymentAccountCode){const{bankAccountService:s}=a();if(s){const i=s.getAccount(t.paymentAccountCode);if(!i)throw new Error(`決済口座 ${t.paymentAccountCode} が見つかりません`);if(!i.isActive)throw new Error(`決済口座 ${i.name} は無効化されています`)}}const n=e.createTransaction(t);if(n.success&&n.data){const s=n.data;if(t.paymentAccountCode){const{bankAccountService:i}=a();i==null||i.registerTransactionReference(s.id,t.paymentAccountCode,!1)}if(t.type==="transfer"&&t.accountCode){const{bankAccountService:i}=a();i==null||i.registerTransactionReference(s.id,t.accountCode,!0)}return o(i=>({transactions:[...i.transactions,s],isLoading:!1,lastUpdate:new Date})),a().showToast("success","取引を登録しました"),{success:!0,data:s}}else throw new Error(((r=n.errors)==null?void 0:r.join(`
`))||"取引の作成に失敗しました")}catch(n){const s=n instanceof Error?n.message:"取引の作成中にエラーが発生しました";return o({isLoading:!1,error:s}),a().showToast("error",s),{success:!1,errors:[s]}}},updateTransaction:(t,e)=>{o(r=>({transactions:r.transactions.map(n=>n.id===t?{...n,...e,updatedAt:new Date}:n),lastUpdate:new Date})),a().showToast("success","取引を更新しました")},deleteTransaction:t=>{const e=a().transactions.find(r=>r.id===t);if(e){const{bankAccountService:r}=a();r&&(e.paymentAccountCode&&r.unregisterTransactionReference(t,e.paymentAccountCode,!1),e.type==="transfer"&&e.accountCode&&r.unregisterTransactionReference(t,e.accountCode,!0))}o(r=>{var n;return{transactions:r.transactions.filter(s=>s.id!==t),selectedTransaction:((n=r.selectedTransaction)==null?void 0:n.id)===t?null:r.selectedTransaction,lastUpdate:new Date}}),a().showToast("success","取引を削除しました")},selectTransaction:t=>{o({selectedTransaction:t})}}),_=(o,a)=>({journals:[],selectedJournal:null,filterCriteria:{},loadJournals:()=>{const{engine:t}=a();if(!t){console.error("Engine not initialized");return}const e=t.journals||[];o({journals:e,lastUpdate:new Date}),console.log(`Loaded ${e.length} journals`)},addJournal:t=>{const{engine:e}=a();if(!e){o({error:"Engine not initialized"});return}const r={id:`j_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,date:new Date().toISOString().split("T")[0],number:"",description:"",status:"DRAFT",details:[],...t};e.journals.push(r),o(n=>({journals:[...n.journals,r],lastUpdate:new Date})),a().showToast("success","仕訳を追加しました")},updateJournal:(t,e)=>{const{engine:r}=a();if(!r){o({error:"Engine not initialized"});return}const n=r.journals.findIndex(s=>s.id===t);n!==-1&&(r.journals[n]={...r.journals[n],...e}),o(s=>{var i;return{journals:s.journals.map(c=>c.id===t?{...c,...e}:c),selectedJournal:((i=s.selectedJournal)==null?void 0:i.id)===t?{...s.selectedJournal,...e}:s.selectedJournal,lastUpdate:new Date}}),a().showToast("success","仕訳を更新しました")},deleteJournal:t=>{const{engine:e}=a();if(!e){o({error:"Engine not initialized"});return}e.journals=e.journals.filter(r=>r.id!==t),o(r=>{var n;return{journals:r.journals.filter(s=>s.id!==t),selectedJournal:((n=r.selectedJournal)==null?void 0:n.id)===t?null:r.selectedJournal,lastUpdate:new Date}}),a().showToast("success","仕訳を削除しました")},selectJournal:t=>{o({selectedJournal:t})},setFilterCriteria:t=>{o({filterCriteria:t})},clearFilterCriteria:()=>{o({filterCriteria:{}})}}),V=(o,a)=>({journals:[],lastJournalNumber:0,selectedJournalIds:new Set,journalFilter:{},journalSort:{field:"date",direction:"desc"},createJournal:(t,e,r,n)=>{const i=a().getNextJournalNumber(),c={id:`j_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,date:r||new Date().toISOString().split("T")[0],number:i,description:e,status:v.POSTED,details:t.map(m=>({accountCode:m.accountCode,debitAmount:m.isDebit?m.amount:void 0,creditAmount:m.isDebit?void 0:m.amount,description:m.description}))},{engine:u}=a();if(u){console.log("=== 仕訳をAccountingEngineに追加 ==="),console.log("仕訳データ:",c),console.log("日付:",c.date),console.log("区分:",n),console.log("ステータス:",c.status),console.log("明細:",c.details);const m={date:c.date,description:c.description,division:n||"KANRI",details:c.details.map(p=>({accountCode:p.accountCode,amount:p.debitAmount||p.creditAmount||0,isDebit:!!p.debitAmount}))},h=u.createJournal(m);if(console.log("Engine.createJournal 結果:",h),h.success&&h.data){const p=u.postJournalById(h.data.id);console.log("Posted journal:",h.data.id,p),c.id=h.data.id}}else console.warn("Engine not available");return o(m=>({journals:[...m.journals,c],lastJournalNumber:m.lastJournalNumber+1,lastUpdate:new Date})),a().showToast("success",`仕訳 ${i} を作成しました`),c},updateJournal:(t,e)=>{const r=a().journals.find(n=>n.id===t);return r?r.status===v.POSTED&&!e.status?(a().showToast("error","記帳済みの仕訳は編集できません"),!1):(o(n=>({journals:n.journals.map(s=>s.id===t?{...s,...e}:s),lastUpdate:new Date})),a().showToast("success","仕訳を更新しました"),!0):(a().showToast("error","仕訳が見つかりません"),!1)},deleteJournal:t=>{const e=a().journals.find(r=>r.id===t);return e?e.status===v.POSTED?(a().showToast("error","記帳済みの仕訳は削除できません"),!1):(o(r=>({journals:r.journals.filter(n=>n.id!==t),selectedJournalIds:new Set([...r.selectedJournalIds].filter(n=>n!==t)),lastUpdate:new Date})),a().showToast("success","仕訳を削除しました"),!0):(a().showToast("error","仕訳が見つかりません"),!1)},postJournal:t=>{const e=a().journals.find(i=>i.id===t);if(!e)return!1;if(e.status===v.POSTED)return a().showToast("warning","既に記帳済みです"),!1;const r=e.details.reduce((i,c)=>i+(c.debitAmount||0),0),n=e.details.reduce((i,c)=>i+(c.creditAmount||0),0);if(Math.abs(r-n)>.01)return a().showToast("error","貸借が一致しません"),!1;const{engine:s}=a();return s&&s.postJournalById(t),o(i=>({journals:i.journals.map(c=>c.id===t?{...c,status:v.POSTED}:c),lastUpdate:new Date})),a().showToast("success","仕訳を記帳しました"),!0},unpostJournal:t=>(o(e=>({journals:e.journals.map(r=>r.id===t?{...r,status:v.DRAFT}:r),lastUpdate:new Date})),a().showToast("success","記帳を取り消しました"),!0),postMultipleJournals:t=>{let e=0,r=0;return t.forEach(n=>{a().postJournal(n)?e++:r++}),e>0&&a().showToast("success",`${e}件の仕訳を記帳しました`),r>0&&a().showToast("warning",`${r}件の仕訳の記帳に失敗しました`),{success:e,failed:r}},deleteMultipleJournals:t=>{let e=0,r=0;return t.forEach(n=>{a().deleteJournal(n)?e++:r++}),{success:e,failed:r}},setJournalFilter:t=>{o(e=>({journalFilter:{...e.journalFilter,...t}}))},clearJournalFilter:()=>{o({journalFilter:{}})},setJournalSort:(t,e)=>{o(r=>({journalSort:{field:t,direction:e||(r.journalSort.field===t&&r.journalSort.direction==="asc"?"desc":"asc")}}))},selectJournal:t=>{o(e=>({selectedJournalIds:new Set([...e.selectedJournalIds,t])}))},deselectJournal:t=>{o(e=>({selectedJournalIds:new Set([...e.selectedJournalIds].filter(r=>r!==t))}))},selectAllJournals:()=>{const t=a().getFilteredJournals();o({selectedJournalIds:new Set(t.map(e=>e.id))})},clearJournalSelection:()=>{o({selectedJournalIds:new Set})},getFilteredJournals:()=>{const{journals:t,journalFilter:e}=a();return t.filter(r=>{if(e.status&&r.status!==e.status||e.dateFrom&&r.date<e.dateFrom||e.dateTo&&r.date>e.dateTo||e.accountCode&&!r.details.some(s=>s.accountCode===e.accountCode))return!1;if(e.amountMin||e.amountMax){const n=r.details.reduce((s,i)=>s+(i.debitAmount||0),0);if(e.amountMin&&n<e.amountMin||e.amountMax&&n>e.amountMax)return!1}return!0})},getSortedJournals:()=>{const{journalSort:t}=a();return[...a().getFilteredJournals()].sort((r,n)=>{let s=0;switch(t.field){case"date":s=r.date.localeCompare(n.date);break;case"number":s=r.number.localeCompare(n.number);break;case"amount":const i=r.details.reduce((u,m)=>u+(m.debitAmount||0),0),c=n.details.reduce((u,m)=>u+(m.debitAmount||0),0);s=i-c;break;case"status":s=r.status.localeCompare(n.status);break}return t.direction==="asc"?s:-s})},getJournalsByStatus:t=>a().journals.filter(e=>e.status===t),getJournalsByPeriod:(t,e)=>a().journals.filter(r=>r.date>=t&&r.date<=e),getTotalsByAccount:t=>{const e=a().journals.filter(s=>s.status===v.POSTED);let r=0,n=0;return e.forEach(s=>{s.details.forEach(i=>{i.accountCode===t&&(r+=i.debitAmount||0,n+=i.creditAmount||0)})}),{debit:r,credit:n}},getNextJournalNumber:()=>{const{lastJournalNumber:t}=a(),e=t+1,r=new Date().getFullYear(),n=String(new Date().getMonth()+1).padStart(2,"0");return`${r}${n}-${String(e).padStart(4,"0")}`}}),H=(o,a)=>({transactions:[],transfers:[],selectedTransactionIds:new Set,transactionFilter:{},transactionSort:{field:"date",direction:"desc"},createEnhancedTransaction:t=>{const e={...t,id:D(),createdAt:new Date().toISOString()},r=a().validateTransaction(e);return r.isValid?(o(n=>({transactions:[...n.transactions,e],lastUpdate:new Date})),(e.type==="INCOME"||e.type==="EXPENSE")&&a().createJournal([{accountCode:e.accountCode,amount:e.amount,isDebit:e.type==="EXPENSE",description:e.description}],e.description,e.date),a().showToast("success","取引を登録しました"),e):(a().showToast("error",r.errors.join(", ")),e)},updateEnhancedTransaction:(t,e)=>{const r=a().transactions.find(i=>i.id===t);if(!r)return a().showToast("error","取引が見つかりません"),!1;const n={...r,...e},s=a().validateTransaction(n);return s.isValid?(o(i=>({transactions:i.transactions.map(c=>c.id===t?n:c),lastUpdate:new Date})),a().showToast("success","取引を更新しました"),!0):(a().showToast("error",s.errors.join(", ")),!1)},deleteEnhancedTransaction:t=>a().canDeleteTransaction(t)?(o(e=>({transactions:e.transactions.filter(r=>r.id!==t),selectedTransactionIds:new Set([...e.selectedTransactionIds].filter(r=>r!==t)),lastUpdate:new Date})),a().showToast("success","取引を削除しました"),!0):(a().showToast("error","この取引は削除できません"),!1),duplicateTransaction:t=>{const e=a().transactions.find(n=>n.id===t);return e?a().createEnhancedTransaction({...e,date:new Date().toISOString().split("T")[0],description:`${e.description} (複製)`}):(a().showToast("error","取引が見つかりません"),null)},createTransfer:t=>{const e={...t,id:D(),status:"pending",createdAt:new Date().toISOString()};return o(r=>({transfers:[...r.transfers,e],lastUpdate:new Date})),a().showToast("success","振替を作成しました"),e},completeTransfer:t=>{const e=a().transfers.find(n=>n.id===t);if(!e)return a().showToast("error","振替が見つかりません"),!1;if(e.status==="completed")return a().showToast("warning","既に完了しています"),!1;const r=[{accountCode:e.fromAccountCode,amount:e.amount,isDebit:!1,description:`振替: ${e.description}`},{accountCode:e.toAccountCode,amount:e.amount,isDebit:!0,description:`振替: ${e.description}`}];return e.fee&&e.feeAccountCode&&(r.push({accountCode:e.fromAccountCode,amount:e.fee,isDebit:!1,description:"振替手数料"}),r.push({accountCode:e.feeAccountCode,amount:e.fee,isDebit:!0,description:"振替手数料"})),a().createJournal(r,e.description,e.date),o(n=>({transfers:n.transfers.map(s=>s.id===t?{...s,status:"completed",completedAt:new Date().toISOString()}:s),lastUpdate:new Date})),a().showToast("success","振替を完了しました"),!0},cancelTransfer:t=>{const e=a().transfers.find(r=>r.id===t);return e?e.status==="completed"?(a().showToast("error","完了済みの振替はキャンセルできません"),!1):(o(r=>({transfers:r.transfers.map(n=>n.id===t?{...n,status:"cancelled"}:n),lastUpdate:new Date})),a().showToast("success","振替をキャンセルしました"),!0):(a().showToast("error","振替が見つかりません"),!1)},importTransactions:t=>{let e=0,r=0;return t.forEach(n=>{a().validateTransaction(n).isValid?(a().createEnhancedTransaction(n),e++):r++}),a().showToast("info",`インポート完了: 成功 ${e}件, 失敗 ${r}件`),{success:e,failed:r}},deleteMultipleTransactions:t=>{let e=0,r=0;return t.forEach(n=>{a().deleteEnhancedTransaction(n)?e++:r++}),{success:e,failed:r}},setTransactionFilter:t=>{o(e=>({transactionFilter:{...e.transactionFilter,...t}}))},clearTransactionFilter:()=>{o({transactionFilter:{}})},setTransactionSort:(t,e)=>{o(r=>({transactionSort:{field:t,direction:e||(r.transactionSort.field===t&&r.transactionSort.direction==="asc"?"desc":"asc")}}))},selectTransaction:t=>{o(e=>({selectedTransactionIds:new Set([...e.selectedTransactionIds,t])}))},deselectTransaction:t=>{o(e=>({selectedTransactionIds:new Set([...e.selectedTransactionIds].filter(r=>r!==t))}))},selectAllTransactions:()=>{const t=a().getFilteredTransactions();o({selectedTransactionIds:new Set(t.map(e=>e.id))})},clearTransactionSelection:()=>{o({selectedTransactionIds:new Set})},getFilteredTransactions:()=>{const{transactions:t,transactionFilter:e}=a();return t.filter(r=>!(e.type&&r.type!==e.type||e.dateFrom&&r.date<e.dateFrom||e.dateTo&&r.date>e.dateTo||e.accountCode&&r.accountCode!==e.accountCode||e.vendorId&&r.vendorId!==e.vendorId||e.paymentMethod&&r.paymentMethod!==e.paymentMethod||e.amountMin&&r.amount<e.amountMin||e.amountMax&&r.amount>e.amountMax))},getSortedTransactions:()=>{const{transactionSort:t}=a();return[...a().getFilteredTransactions()].sort((r,n)=>{let s=0;switch(t.field){case"date":s=r.date.localeCompare(n.date);break;case"amount":s=r.amount-n.amount;break;case"type":s=r.type.localeCompare(n.type);break;case"vendor":s=(r.vendorId||"").localeCompare(n.vendorId||"");break}return t.direction==="asc"?s:-s})},getTransactionsByType:t=>a().transactions.filter(e=>e.type===t),getTransactionsByPeriod:(t,e)=>a().transactions.filter(r=>r.date>=t&&r.date<=e),getTransactionsByVendor:t=>a().transactions.filter(e=>e.vendorId===t),getTotalsByType:()=>{const t={INCOME:0,EXPENSE:0,TRANSFER:0};return a().transactions.forEach(e=>{t[e.type]+=e.amount}),t},getTotalsByPaymentMethod:()=>{const t={};return a().transactions.forEach(e=>{e.paymentMethod&&(t[e.paymentMethod]=(t[e.paymentMethod]||0)+e.amount)}),t},getMonthlyTotals:(t,e)=>{const r=`${t}-${String(e).padStart(2,"0")}-01`,n=`${t}-${String(e).padStart(2,"0")}-31`,s=a().getTransactionsByPeriod(r,n),i=s.filter(u=>u.type==="INCOME").reduce((u,m)=>u+m.amount,0),c=s.filter(u=>u.type==="EXPENSE").reduce((u,m)=>u+m.amount,0);return{income:i,expense:c,net:i-c}},getTransfersByAccount:t=>a().transfers.filter(e=>e.fromAccountCode===t||e.toAccountCode===t),getPendingTransfers:()=>a().transfers.filter(t=>t.status==="pending"),getTransferTotal:(t,e,r)=>{let n=0,s=0;return a().transfers.filter(i=>i.status!=="completed"||e&&i.date<e||r&&i.date>r?!1:i.fromAccountCode===t||i.toAccountCode===t).forEach(i=>{i.fromAccountCode===t&&(s+=i.amount+(i.fee||0)),i.toAccountCode===t&&(n+=i.amount)}),{inflow:n,outflow:s}},validateTransaction:t=>{const e=[];return t.date||e.push("日付は必須です"),(!t.amount||t.amount<=0)&&e.push("金額は0より大きい必要があります"),t.type||e.push("取引タイプは必須です"),t.accountCode||e.push("勘定科目は必須です"),t.description||e.push("摘要は必須です"),{isValid:e.length===0,errors:e}},canDeleteTransaction:t=>!!a().transactions.find(r=>r.id===t)}),X=(o,a)=>({auxiliaryLedgers:[],unitOwners:[],vendors:[],selectedAuxiliaryIds:new Set,auxiliaryFilter:{},createAuxiliaryEntry:t=>{const e={...t,id:`aux_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return o(r=>({auxiliaryLedgers:[...r.auxiliaryLedgers,e],lastUpdate:new Date})),a().showToast("success","補助元帳を作成しました"),e},updateAuxiliaryEntry:(t,e)=>a().auxiliaryLedgers.find(n=>n.id===t)?(o(n=>({auxiliaryLedgers:n.auxiliaryLedgers.map(s=>s.id===t?{...s,...e,updatedAt:new Date().toISOString()}:s),lastUpdate:new Date})),a().showToast("success","補助元帳を更新しました"),!0):(a().showToast("error","補助元帳が見つかりません"),!1),deleteAuxiliaryEntry:t=>(a().journals||[]).some(n=>{var s;return(s=n.details)==null?void 0:s.some(i=>i.auxiliaryCode===t)})?(a().showToast("error","この補助元帳は使用中のため削除できません"),!1):(o(n=>({auxiliaryLedgers:n.auxiliaryLedgers.filter(s=>s.id!==t),unitOwners:n.unitOwners.filter(s=>s.id!==t),vendors:n.vendors.filter(s=>s.id!==t),selectedAuxiliaryIds:new Set([...n.selectedAuxiliaryIds].filter(s=>s!==t)),lastUpdate:new Date})),a().showToast("success","補助元帳を削除しました"),!0),toggleAuxiliaryStatus:t=>{const e=a().auxiliaryLedgers.find(r=>r.id===t);return e?a().updateAuxiliaryEntry(t,{isActive:!e.isActive}):!1},createUnitOwner:t=>{const e={...t,type:"unit_owner",id:`owner_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,code:`OWNER_${t.unitNumber}`,name:t.ownerName,isActive:!0,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return a().createAuxiliaryEntry(e),o(r=>({unitOwners:[...r.unitOwners,e],lastUpdate:new Date})),a().showToast("success",`区分所有者 ${e.unitNumber} を登録しました`),e},updateUnitOwner:(t,e)=>a().unitOwners.find(n=>n.id===t)?(a().updateAuxiliaryEntry(t,e),o(n=>({unitOwners:n.unitOwners.map(s=>s.id===t?{...s,...e,updatedAt:new Date().toISOString()}:s),lastUpdate:new Date})),a().showToast("success","区分所有者情報を更新しました"),!0):(a().showToast("error","区分所有者が見つかりません"),!1),deleteUnitOwner:t=>a().deleteAuxiliaryEntry(t),getUnitOwnerByNumber:t=>a().unitOwners.find(e=>e.unitNumber===t),calculateTotalFees:()=>{const t=a().unitOwners.filter(e=>e.isActive);return{managementFee:t.reduce((e,r)=>e+r.managementFee,0),repairReserve:t.reduce((e,r)=>e+r.repairReserve,0),parkingFee:t.reduce((e,r)=>e+(r.parkingFee||0),0)}},createVendor:t=>{const e={...t,type:"vendor",id:`vendor_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,code:`VENDOR_${t.vendorName.toUpperCase().replace(/\s/g,"_").substr(0,10)}`,name:t.vendorName,isActive:!0,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return a().createAuxiliaryEntry(e),o(r=>({vendors:[...r.vendors,e],lastUpdate:new Date})),a().showToast("success",`取引先 ${e.vendorName} を登録しました`),e},updateVendor:(t,e)=>a().vendors.find(n=>n.id===t)?(a().updateAuxiliaryEntry(t,e),o(n=>({vendors:n.vendors.map(s=>s.id===t?{...s,...e,updatedAt:new Date().toISOString()}:s),lastUpdate:new Date})),a().showToast("success","取引先情報を更新しました"),!0):(a().showToast("error","取引先が見つかりません"),!1),deleteVendor:t=>a().deleteAuxiliaryEntry(t),getVendorsByCategory:t=>a().vendors.filter(e=>e.category===t),getActiveVendors:()=>a().vendors.filter(t=>t.isActive),setAuxiliaryFilter:t=>{o(e=>({auxiliaryFilter:{...e.auxiliaryFilter,...t}}))},clearAuxiliaryFilter:()=>{o({auxiliaryFilter:{}})},searchAuxiliary:t=>{const e=t.toLowerCase();return a().auxiliaryLedgers.filter(r=>r.code.toLowerCase().includes(e)||r.name.toLowerCase().includes(e))},getAuxiliaryByType:t=>a().auxiliaryLedgers.filter(e=>e.type===t),getAuxiliaryByAccount:t=>a().auxiliaryLedgers.filter(e=>e.accountCode===t),getAuxiliaryBalance:t=>{const e=a().journals||[];let r=0,n=0;return e.forEach(s=>{var i;s.status==="POSTED"&&((i=s.details)==null||i.forEach(c=>{c.auxiliaryCode===t&&(r+=c.debitAmount||0,n+=c.creditAmount||0)}))}),{debit:r,credit:n,balance:r-n}},generateAuxiliaryReport:(t,e,r)=>{const n=a().auxiliaryLedgers.find(h=>h.code===t);if(!n)return{auxiliaryCode:t,auxiliaryName:"不明",period:{from:e,to:r},openingBalance:0,transactions:[],closingBalance:0,totalDebit:0,totalCredit:0};const s=a().journals||[],i=[];let c=0,u=0,m=0;return s.filter(h=>{var p;return h.status!=="POSTED"||h.date<e||h.date>r?!1:(p=h.details)==null?void 0:p.some(g=>g.auxiliaryCode===t)}).sort((h,p)=>h.date.localeCompare(p.date)).forEach(h=>{var p;(p=h.details)==null||p.forEach(g=>{if(g.auxiliaryCode===t){const y=g.debitAmount||0,w=g.creditAmount||0;c+=y-w,u+=y,m+=w,i.push({date:h.date,description:g.description||h.description,debit:y,credit:w,balance:c})}})}),{auxiliaryCode:t,auxiliaryName:n.name,period:{from:e,to:r},openingBalance:0,transactions:i,closingBalance:c,totalDebit:u,totalCredit:m}},importUnitOwners:t=>{let e=0,r=0;return t.forEach(n=>{try{a().createUnitOwner(n),e++}catch{r++}}),a().showToast("info",`インポート完了: 成功 ${e}件, 失敗 ${r}件`),{success:e,failed:r}},importVendors:t=>{let e=0,r=0;return t.forEach(n=>{try{a().createVendor(n),e++}catch{r++}}),a().showToast("info",`インポート完了: 成功 ${e}件, 失敗 ${r}件`),{success:e,failed:r}},exportAuxiliaryData:()=>({unitOwners:a().unitOwners,vendors:a().vendors})}),q=o=>({isLoading:!1,error:null,toastMessage:null,showToast:(a,t)=>{o({toastMessage:{type:a,message:t}}),setTimeout(()=>{o(e=>{var r;return((r=e.toastMessage)==null?void 0:r.message)===t?{toastMessage:null}:e})},5e3)},hideToast:()=>{o({toastMessage:null})},clearError:()=>{o({error:null})},setLoading:a=>{o({isLoading:a})}}),K=(o,a)=>{const t={validateJournal:e=>({isValid:!0,errors:[]}),createJournal:e=>({...e,id:`journal_${Date.now()}`}),updateJournal:(e,r)=>({id:e,...r}),deleteJournal:e=>!0,approveJournal:e=>!0,postJournal:e=>!0,getInstance:()=>t,calculateTotals:e=>{const r=e.reduce((s,i)=>s+(i.debitAmount||0),0),n=e.reduce((s,i)=>s+(i.creditAmount||0),0);return{totalDebit:r,totalCredit:n}},filterJournals:(e,r)=>{let n=[...e];if(r.status&&(n=n.filter(s=>s.status===r.status)),r.dateFrom&&(n=n.filter(s=>s.date>=r.dateFrom)),r.dateTo&&(n=n.filter(s=>s.date<=r.dateTo)),r.searchQuery){const s=r.searchQuery.toLowerCase();n=n.filter(i=>{var c,u;return((c=i.description)==null?void 0:c.toLowerCase().includes(s))||((u=i.reference)==null?void 0:u.toLowerCase().includes(s))})}return n},sortJournals:(e,r)=>[...e].sort((n,s)=>{const i=n[r.field],c=s[r.field],u=i<c?-1:i>c?1:0;return r.direction==="asc"?u:-u}),summarizeByAccount:e=>{const r=new Map;return e.forEach(n=>{n.status==="POSTED"&&n.lines&&n.lines.forEach(s=>{const i=r.get(s.accountCode)||{debit:0,credit:0};i.debit+=s.debitAmount||0,i.credit+=s.creditAmount||0,r.set(s.accountCode,i)})}),Array.from(r.entries()).map(([n,s])=>({accountCode:n,accountName:n,totalDebit:s.debit,totalCredit:s.credit,balance:s.debit-s.credit}))}};return{journals:[],selectedJournalIds:new Set,filter:{},sort:{field:"date",direction:"desc"},editingJournal:null,isCreating:!1,createJournal:e=>{const r=t.createJournal(e);o(s=>({journals:[...s.journals,r]}));const n=a();return n.showToast&&n.showToast("success","仕訳を作成しました"),r},updateJournal:(e,r)=>{const n=a().journals.find(c=>c.id===e);if(!n)return!1;const s={...n,...r,updatedAt:new Date().toISOString()};if(r.lines){const c=t.calculateTotals(r.lines);s.totalDebit=c.totalDebit,s.totalCredit=c.totalCredit,s.isBalanced=Math.abs(c.totalDebit-c.totalCredit)<.01}o(c=>({journals:c.journals.map(u=>u.id===e?s:u)}));const i=a();return i.showToast&&i.showToast("success","仕訳を更新しました"),!0},deleteJournal:e=>{const r=a().journals.find(s=>s.id===e);if(!r)return!1;if(r.status==="POSTED"){const s=a();return s.showToast&&s.showToast("error","記帳済みの仕訳は削除できません"),!1}o(s=>({journals:s.journals.filter(i=>i.id!==e),selectedJournalIds:new Set([...s.selectedJournalIds].filter(i=>i!==e))}));const n=a();return n.showToast&&n.showToast("success","仕訳を削除しました"),!0},deleteMultipleJournals:e=>{let r=0;return e.forEach(n=>{a().deleteJournal(n)&&r++}),r},postJournal:e=>{const r=a().journals.find(s=>s.id===e);if(!r||r.status==="POSTED")return!1;if(!r.isBalanced){const s=a();return s.showToast&&s.showToast("error","貸借が一致していない仕訳は記帳できません"),!1}o(s=>({journals:s.journals.map(i=>i.id===e?{...i,status:"POSTED"}:i)}));const n=a();return n.showToast&&n.showToast("success","仕訳を記帳しました"),!0},cancelJournal:e=>{const r=a().journals.find(s=>s.id===e);if(!r||r.status==="CANCELLED")return!1;o(s=>({journals:s.journals.map(i=>i.id===e?{...i,status:"CANCELLED"}:i)}));const n=a();return n.showToast&&n.showToast("success","仕訳を取り消しました"),!0},postMultipleJournals:e=>{let r=0;return e.forEach(n=>{a().postJournal(n)&&r++}),r},setFilter:e=>{o(r=>({filter:{...r.filter,...e}}))},clearFilter:()=>{o({filter:{}})},setSort:e=>{o({sort:e})},selectJournal:e=>{o(r=>({selectedJournalIds:new Set([...r.selectedJournalIds,e])}))},deselectJournal:e=>{o(r=>({selectedJournalIds:new Set([...r.selectedJournalIds].filter(n=>n!==e))}))},selectAllJournals:()=>{const e=a().getFilteredJournals();o({selectedJournalIds:new Set(e.map(r=>r.id))})},clearSelection:()=>{o({selectedJournalIds:new Set})},startEditing:e=>{o({editingJournal:e})},stopEditing:()=>{o({editingJournal:null})},setCreating:e=>{o({isCreating:e})},getFilteredJournals:()=>{const{journals:e,filter:r}=a();return t.filterJournals(e,r)},getSortedJournals:()=>{const e=a().getFilteredJournals(),{sort:r}=a();return t.sortJournals(e,r)},getJournalById:e=>a().journals.find(r=>r.id===e),getJournalSummary:()=>{const{journals:e}=a(),r=new Date().toISOString().split("T")[0];return{totalCount:e.length,draftCount:e.filter(n=>n.status==="DRAFT").length,postedCount:e.filter(n=>n.status==="POSTED").length,cancelledCount:e.filter(n=>n.status==="CANCELLED").length,totalDebitAmount:e.reduce((n,s)=>n+s.totalDebit,0),totalCreditAmount:e.reduce((n,s)=>n+s.totalCredit,0),periodStart:e.length>0?e[0].date:r,periodEnd:e.length>0?e[e.length-1].date:r}},getAccountSummary:()=>{const{journals:e}=a();return t.summarizeByAccount(e)},importJournals:e=>{o({journals:e});const r=a();r.showToast&&r.showToast("success",`${e.length}件の仕訳をインポートしました`)},exportJournals:()=>a().journals,clearAllJournals:()=>{o({journals:[],selectedJournalIds:new Set,editingJournal:null});const e=a();e.showToast&&e.showToast("info","すべての仕訳を削除しました")}}};class C{constructor(){b(this,"bankCode","generic");b(this,"bankName","汎用フォーマット")}getColumnMapping(){return{date:"日付",description:"摘要",deposit:"入金",withdrawal:"出金",balance:"残高"}}parse(a){const t=this.getColumnMapping();return a.map((e,r)=>{const n=this.parseAmount(e[t.deposit]),s=this.parseAmount(e[t.withdrawal]);return{id:this.generateTransactionId(e,r),date:this.parseDate(e[t.date]),description:e[t.description]||"",depositAmount:n,withdrawalAmount:s,amount:n-s,balance:this.parseAmount(e[t.balance]),bankCode:this.bankCode,transactionType:n>0?"deposit":"withdrawal",status:"unprocessed"}})}validate(a){const t=this.getColumnMapping();return!!(a[t.date]&&a[t.description])}parseAmount(a){if(!a)return 0;const t=String(a).replace(/[,，\s]/g,"");return parseFloat(t)||0}parseDate(a){const t=String(a).trim();if(/^\d{4}-\d{2}-\d{2}$/.test(t))return t;if(/^\d{4}\/\d{2}\/\d{2}$/.test(t))return t.replace(/\//g,"-");if(/^\d{2}\/\d{2}\/\d{4}$/.test(t)){const[r,n,s]=t.split("/");return`${s}-${n}-${r}`}const e=t.match(/令和(\d+)年(\d+)月(\d+)日/);if(e){const r=2018+parseInt(e[1]),n=e[2].padStart(2,"0"),s=e[3].padStart(2,"0");return`${r}-${n}-${s}`}return t}generateTransactionId(a,t){const e=Object.values(a).join("_");return`txn_${Date.now()}_${t}_${this.simpleHash(e)}`}simpleHash(a){let t=0;for(let e=0;e<a.length;e++){const r=a.charCodeAt(e);t=(t<<5)-t+r,t=t&t}return Math.abs(t).toString(36)}}class Q extends C{constructor(){super(...arguments);b(this,"bankCode","mufg");b(this,"bankName","三菱UFJ銀行")}getColumnMapping(){return{date:"お取引日",description:"摘要",deposit:"お預入れ",withdrawal:"お引出し",balance:"残高"}}}class Y extends C{constructor(){super(...arguments);b(this,"bankCode","smbc");b(this,"bankName","三井住友銀行")}getColumnMapping(){return{date:"取引日",description:"摘要",deposit:"入金額",withdrawal:"出金額",balance:"残高"}}}class G extends C{constructor(){super(...arguments);b(this,"bankCode","mizuho");b(this,"bankName","みずほ銀行")}getColumnMapping(){return{date:"取引日",description:"お取引内容",deposit:"入金",withdrawal:"出金",balance:"残高"}}}class W{constructor(a,t){b(this,"adapters");b(this,"importedTransactions",new Map);this.journalService=a,this.accountService=t,this.adapters=new Map([["generic",new C],["mufg",new Q],["smbc",new Y],["mizuho",new G]]),this.loadFromStorage()}async importCSV(a,t="generic"){const e=this.generateBatchId(),r=[];try{const n=await this.parseCSVFile(a);if(n.length===0)throw new Error("CSVファイルが空です");const s=this.adapters.get(t);if(!s)throw new Error(`未対応の銀行タイプ: ${t}`);const i=s.parse(n);i.forEach(m=>{m.importBatchId=e});const c=this.filterDuplicates(i),u=i.length-c.length;return c.forEach((m,h)=>{const p=this.validateTransaction(m,h);r.push(...p)}),c.forEach(m=>{this.importedTransactions.set(m.id,m)}),this.saveToStorage(),{batchId:e,total:n.length,imported:c.length,duplicates:u,errors:r,transactions:c,timestamp:new Date().toISOString()}}catch(n){return r.push({row:0,message:n instanceof Error?n.message:"インポートエラー",severity:"error"}),{batchId:e,total:0,imported:0,duplicates:0,errors:r,transactions:[],timestamp:new Date().toISOString()}}}parseCSVFile(a){return new Promise((t,e)=>{const r=new FileReader;r.onload=n=>{var i;const s=(i=n.target)==null?void 0:i.result;O.parse(s,{header:!0,skipEmptyLines:!0,encoding:"UTF-8",complete:c=>{c.errors.length>0&&console.warn("CSV parsing warnings:",c.errors),t(c.data)},error:c=>{e(new Error(`CSV解析エラー: ${c.message}`))}})},r.onerror=()=>{e(new Error("ファイル読み込みエラー"))},r.readAsText(a,"UTF-8")})}filterDuplicates(a){const t=new Set,e=[];for(const r of a){const n=`${r.date}_${r.description}_${r.amount}_${r.balance}`;t.has(n)||(t.add(n),e.push(r))}return e}validateTransaction(a,t){const e=[];return(!a.date||!/^\d{4}-\d{2}-\d{2}$/.test(a.date))&&e.push({row:t,field:"date",value:a.date,message:"日付形式が不正です",severity:"warning"}),isNaN(a.amount)&&e.push({row:t,field:"amount",value:String(a.amount),message:"金額が数値ではありません",severity:"error"}),(!a.description||a.description.trim()==="")&&e.push({row:t,field:"description",value:a.description,message:"摘要が空です",severity:"warning"}),e}getImportedTransactions(a){const t=Array.from(this.importedTransactions.values());return a?t.filter(e=>e.importBatchId===a):t}updateTransactionStatus(a,t,e){const r=this.importedTransactions.get(a);r&&(r.status=t,e&&(r.matchedJournalId=e),this.saveToStorage())}generateBatchId(){const a=new Date,t=a.toISOString().slice(0,10).replace(/-/g,""),e=a.toISOString().slice(11,19).replace(/:/g,"");return`batch_${t}_${e}`}loadFromStorage(){try{const a=localStorage.getItem("bankTransactions");a&&JSON.parse(a).forEach(e=>{this.importedTransactions.set(e.id,e)})}catch(a){console.error("Failed to load bank transactions from storage:",a)}}saveToStorage(){try{const a=Array.from(this.importedTransactions.values());localStorage.setItem("bankTransactions",JSON.stringify(a))}catch(a){console.error("Failed to save bank transactions to storage:",a)}}clearAll(){this.importedTransactions.clear(),localStorage.removeItem("bankTransactions")}}class Z{constructor(a,t){b(this,"unitMaster",new Map([["101",{unitNumber:"101",ownerName:"田中",managementFee:15e3,repairReserve:1e4,parkingFee:3e3}],["202",{unitNumber:"202",ownerName:"山田",managementFee:2e4,repairReserve:15e3,parkingFee:0}],["303",{unitNumber:"303",ownerName:"佐藤",managementFee:15e3,repairReserve:1e4,parkingFee:3e3}],["305",{unitNumber:"305",ownerName:"鈴木",managementFee:15e3,repairReserve:1e4,parkingFee:3e3}],["401",{unitNumber:"401",ownerName:"高橋",managementFee:18e3,repairReserve:12e3,parkingFee:0}]]));b(this,"patterns",[/(\d{3,4})\s*号室/,/(\d{3,4})\s*号/,/(\d{3,4})\s*ゴウ/,/(\d{3,4})\s*ｺﾞｳ/,/Room\s*(\d{3,4})/i,/部屋番号.*(\d{3,4})/,/No\.?\s*(\d{3,4})/i,/＃(\d{3,4})/,/#(\d{3,4})/]);b(this,"learnedPatterns",new Map);this.journalService=a,this.receivableService=t,this.loadLearnedPatterns()}async processPayment(a){const t=this.generateMatchingId(),e=this.extractUnitInfo(a.description);if(!e.unitNumber)return this.createUnidentifiedPayment(t,a);const r=this.unitMaster.get(e.unitNumber);if(!r)return this.createUnknownUnitPayment(t,a,e.unitNumber);const n=r.managementFee+r.repairReserve+(r.parkingFee||0),s=a.amount-n;return Math.abs(s)<1?this.createExactPayment(t,a,e,r):s<0?this.createPartialPayment(t,a,e,r,s):this.createOverPayment(t,a,e,r,s)}extractUnitInfo(a){const t=a.replace(/\s+/g," ").trim();if(this.learnedPatterns.has(t))return this.learnedPatterns.get(t);for(const e of this.patterns){const r=a.match(e);if(r)return{unitNumber:r[1].padStart(3,"0"),confidence:.8,matchedPattern:e.source,originalText:r[0]}}for(const[e,r]of this.unitMaster)if(r.ownerName&&a.includes(r.ownerName))return{unitNumber:e,confidence:.6,matchedPattern:`ownerName:${r.ownerName}`,originalText:r.ownerName};return{unitNumber:null,confidence:0}}createExactPayment(a,t,e,r){const n=[{date:t.date,description:`入金処理 ${r.unitNumber}号室 ${r.ownerName||""}`,debit:[{accountCode:"1101",accountName:"普通預金",amount:t.amount}],credit:[{accountCode:"4101",accountName:"管理費収入",amount:r.managementFee,division:"管理費会計"},{accountCode:"4102",accountName:"修繕積立金収入",amount:r.repairReserve,division:"修繕積立金会計"}],confidence:e.confidence,reason:"標準請求額と完全一致"}];return r.parkingFee&&r.parkingFee>0&&n[0].credit.push({accountCode:"4103",accountName:"駐車場収入",amount:r.parkingFee,division:"駐車場会計"}),{id:a,bankTransactionId:t.id,unitNumber:e.unitNumber,identifiedPayer:r.ownerName,matchingType:"exact",confidence:e.confidence,standardAmount:{managementFee:r.managementFee,repairReserve:r.repairReserve,parkingFee:r.parkingFee},actualAmount:t.amount,difference:0,suggestedJournals:n,status:"auto_matched"}}createPartialPayment(a,t,e,r,n){const s=Math.abs(n),i=t.amount,c=r.managementFee+r.repairReserve+(r.parkingFee||0),u=r.managementFee/c,m=r.repairReserve/c,h=(r.parkingFee||0)/c,p=Math.floor(i*u),g=Math.floor(i*m),y=Math.floor(i*h),w=i-(p+g+y),S=[{date:t.date,description:`入金処理（一部入金） ${r.unitNumber}号室 ${r.ownerName||""}`,debit:[{accountCode:"1101",accountName:"普通預金",amount:i}],credit:[{accountCode:"4101",accountName:"管理費収入",amount:p+w,division:"管理費会計"},{accountCode:"4102",accountName:"修繕積立金収入",amount:g,division:"修繕積立金会計"}],confidence:e.confidence*.9,reason:`標準請求額より${s}円不足`}];y>0&&S[0].credit.push({accountCode:"4103",accountName:"駐車場収入",amount:y,division:"駐車場会計"});const T=r.managementFee-(p+w),x=r.repairReserve-g,d=(r.parkingFee||0)-y,f={date:t.date,description:`未収金計上 ${r.unitNumber}号室`,debit:[],credit:[],confidence:e.confidence*.9,reason:"不足分を未収金として計上"};return T>0&&(f.debit.push({accountCode:"1301",accountName:"管理費未収金",amount:T}),f.credit.push({accountCode:"4101",accountName:"管理費収入",amount:T,division:"管理費会計"})),x>0&&(f.debit.push({accountCode:"1302",accountName:"修繕積立金未収金",amount:x}),f.credit.push({accountCode:"4102",accountName:"修繕積立金収入",amount:x,division:"修繕積立金会計"})),d>0&&(f.debit.push({accountCode:"1303",accountName:"駐車場未収金",amount:d}),f.credit.push({accountCode:"4103",accountName:"駐車場収入",amount:d,division:"駐車場会計"})),f.debit.length>0&&S.push(f),{id:a,bankTransactionId:t.id,unitNumber:e.unitNumber,identifiedPayer:r.ownerName,matchingType:"partial",confidence:e.confidence*.9,standardAmount:{managementFee:r.managementFee,repairReserve:r.repairReserve,parkingFee:r.parkingFee},actualAmount:i,difference:n,suggestedJournals:S,status:"auto_matched"}}createOverPayment(a,t,e,r,n){const s=n;r.managementFee+r.repairReserve+(r.parkingFee||0);const i=[{date:t.date,description:`入金処理（過入金） ${r.unitNumber}号室 ${r.ownerName||""}`,debit:[{accountCode:"1101",accountName:"普通預金",amount:t.amount}],credit:[{accountCode:"4101",accountName:"管理費収入",amount:r.managementFee,division:"管理費会計"},{accountCode:"4102",accountName:"修繕積立金収入",amount:r.repairReserve,division:"修繕積立金会計"}],confidence:e.confidence*.95,reason:`標準請求額より${s}円超過`}];return r.parkingFee&&r.parkingFee>0&&i[0].credit.push({accountCode:"4103",accountName:"駐車場収入",amount:r.parkingFee,division:"駐車場会計"}),i[0].credit.push({accountCode:"2201",accountName:"前受金",amount:s,memo:`${r.unitNumber}号室 次月分前受`}),{id:a,bankTransactionId:t.id,unitNumber:e.unitNumber,identifiedPayer:r.ownerName,matchingType:"over",confidence:e.confidence*.95,standardAmount:{managementFee:r.managementFee,repairReserve:r.repairReserve,parkingFee:r.parkingFee},actualAmount:t.amount,difference:n,suggestedJournals:i,status:"auto_matched"}}createUnidentifiedPayment(a,t){const e=[{date:t.date,description:`入金処理（住戸不明） ${t.description}`,debit:[{accountCode:"1101",accountName:"普通預金",amount:t.amount}],credit:[{accountCode:"2202",accountName:"仮受金",amount:t.amount,memo:"入金者不明 - 要確認"}],confidence:0,reason:"摘要から住戸を特定できませんでした"}];return{id:a,bankTransactionId:t.id,matchingType:"unidentified",confidence:0,actualAmount:t.amount,difference:0,suggestedJournals:e,status:"pending_review"}}createUnknownUnitPayment(a,t,e){const r=[{date:t.date,description:`入金処理（住戸マスタ未登録） ${e}号室`,debit:[{accountCode:"1101",accountName:"普通預金",amount:t.amount}],credit:[{accountCode:"2202",accountName:"仮受金",amount:t.amount,memo:`${e}号室 - マスタ未登録`}],confidence:.3,reason:"住戸番号は特定できましたが、マスタに登録されていません"}];return{id:a,bankTransactionId:t.id,unitNumber:e,matchingType:"unidentified",confidence:.3,actualAmount:t.amount,difference:0,suggestedJournals:r,status:"pending_review"}}manualSetUnit(a,t,e){if(e){const r=e.replace(/\s+/g," ").trim();this.learnedPatterns.set(r,{unitNumber:t,confidence:1,matchedPattern:"manual",originalText:e}),this.saveLearnedPatterns()}}updateUnitMaster(a,t){this.unitMaster.set(a,t)}generateMatchingId(){return`match_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}saveLearnedPatterns(){try{const a=Array.from(this.learnedPatterns.entries());localStorage.setItem("paymentMatchingPatterns",JSON.stringify(a))}catch(a){console.error("Failed to save learned patterns:",a)}}loadLearnedPatterns(){try{const a=localStorage.getItem("paymentMatchingPatterns");if(a){const t=JSON.parse(a);this.learnedPatterns=new Map(t)}}catch(a){console.error("Failed to load learned patterns:",a)}}}class ee{constructor(){b(this,"receivables",new Map);b(this,"unitIndex",new Map);this.initializeFromStorage()}initializeFromStorage(){try{const a=localStorage.getItem("receivables");a&&JSON.parse(a).forEach(e=>{this.receivables.set(e.id,e),this.updateUnitIndex(e.unitNumber,e.id)})}catch(a){console.error("Failed to initialize receivables from storage:",a)}}createReceivable(a,t,e,r,n){const s={id:this.generateId(),unitNumber:a,accountCode:t,amount:e,dueDate:r,status:"outstanding",createdDate:new Date().toISOString(),memo:n};return this.receivables.set(s.id,s),this.updateUnitIndex(a,s.id),this.saveToStorage(),s}clearReceivable(a,t,e,r){const n=this.receivables.get(a);if(!n)return{success:!1,clearedAmount:0,remainingAmount:0,message:"Receivable not found"};const s={id:this.generateId(),date:new Date().toISOString(),amount:Math.min(t,n.amount),journalId:e,remainingAmount:Math.max(0,n.amount-t),memo:r};return n.clearingHistory||(n.clearingHistory=[]),n.clearingHistory.push(s),t>=n.amount?(n.status="paid",n.clearedDate=new Date().toISOString(),n.clearedByJournalId=e,n.amount=0):(n.status="partially_paid",n.amount-=t),this.saveToStorage(),{success:!0,receivableId:a,clearedAmount:s.amount,remainingAmount:n.amount,journalId:e,message:n.status==="paid"?"Fully cleared":"Partially cleared"}}getReceivablesByUnit(a){return(this.unitIndex.get(a)||[]).map(e=>this.receivables.get(e)).filter(e=>e!==void 0).filter(e=>e.status!=="paid")}getAllReceivables(a=!1){const t=Array.from(this.receivables.values());return a?t:t.filter(e=>e.status!=="paid")}getReceivableSummary(a){const t=a?new Date(a):new Date,e=new Map,r={current:0,oneMonth:0,twoMonths:0,threeMonthsPlus:0};let n=0,s;return this.getAllReceivables().forEach(i=>{const c=new Date(i.dueDate),u=this.calculateMonthsOverdue(c,t);n+=i.amount;const m=e.get(i.unitNumber)||this.createEmptyUnitReceivable(i.unitNumber);switch(i.accountCode){case"1301":m.details.managementFee+=i.amount;break;case"1302":m.details.repairReserve+=i.amount;break;case"1303":m.details.parkingFee+=i.amount;break}m.totalAmount+=i.amount,(!m.oldestDueDate||c<new Date(m.oldestDueDate))&&(m.oldestDueDate=i.dueDate,m.monthsOverdue=u),e.set(i.unitNumber,m),u===0?r.current+=i.amount:u===1?r.oneMonth+=i.amount:u===2?r.twoMonths+=i.amount:r.threeMonthsPlus+=i.amount,(!s||i.dueDate<s)&&(s=i.dueDate)}),{totalOutstanding:n,byUnit:e,byAge:r,oldestReceivableDate:s,unitCount:e.size}}updateReceivable(a,t){const e=this.receivables.get(a);return e?(Object.assign(e,t),this.saveToStorage(),e):null}deleteReceivable(a){const t=this.receivables.get(a);if(!t)return!1;this.receivables.delete(a);const e=this.unitIndex.get(t.unitNumber);if(e){const r=e.indexOf(a);r>-1&&e.splice(r,1)}return this.saveToStorage(),!0}calculateMonthsOverdue(a,t){const e=(t.getFullYear()-a.getFullYear())*12+t.getMonth()-a.getMonth();return Math.max(0,e)}createEmptyUnitReceivable(a){return{unitNumber:a,totalAmount:0,details:{managementFee:0,repairReserve:0,parkingFee:0,other:0},oldestDueDate:"",monthsOverdue:0}}updateUnitIndex(a,t){this.unitIndex.has(a)||this.unitIndex.set(a,[]);const e=this.unitIndex.get(a);e.includes(t)||e.push(t)}generateId(){return`rcv_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}saveToStorage(){try{const a=Array.from(this.receivables.values());localStorage.setItem("receivables",JSON.stringify(a))}catch(a){console.error("Failed to save receivables to storage:",a)}}clearAll(){this.receivables.clear(),this.unitIndex.clear(),localStorage.removeItem("receivables")}}const te=(o,a)=>({bankTransactions:[],matchingResults:new Map,receivables:[],currentBatchId:null,isProcessing:!1,importResult:null,receivableSummary:null,bankImportService:null,paymentMatchingService:null,receivableService:null,initializePaymentServices:(t,e)=>{const r=new ee,n=new W(t,e),s=new Z(t,r);o({bankImportService:n,paymentMatchingService:s,receivableService:r}),a().refreshData()},importBankTransactions:async(t,e="generic")=>{const{bankImportService:r}=a();if(!r)throw new Error("Services not initialized");o({isProcessing:!0});try{const n=await r.importCSV(t,e);return o({importResult:n,currentBatchId:n.batchId,bankTransactions:n.transactions,isProcessing:!1}),n}catch(n){throw o({isProcessing:!1}),n}},clearImportedTransactions:()=>{const{bankImportService:t}=a();t&&t.clearAll(),o({bankTransactions:[],currentBatchId:null,importResult:null})},processPaymentMatching:async t=>{const{paymentMatchingService:e,bankTransactions:r}=a();if(!e)throw new Error("Services not initialized");const n=r.find(s=>s.id===t);if(!n)throw new Error("Transaction not found");o({isProcessing:!0});try{const s=await e.processPayment(n),i=new Map(a().matchingResults);if(i.set(s.id,s),n.status="matched",o({matchingResults:i,bankTransactions:[...a().bankTransactions],isProcessing:!1}),s.matchingType==="partial"&&s.unitNumber){const{receivableService:c}=a();if(c&&s.difference<0){const u=Math.abs(s.difference);if(s.standardAmount){if(s.standardAmount.managementFee>0){const m=Math.floor(u*(s.standardAmount.managementFee/(s.standardAmount.managementFee+s.standardAmount.repairReserve+(s.standardAmount.parkingFee||0))));m>0&&c.createReceivable(s.unitNumber,"1301",m,n.date,"一部入金による未収金")}if(s.standardAmount.repairReserve>0){const m=Math.floor(u*(s.standardAmount.repairReserve/(s.standardAmount.managementFee+s.standardAmount.repairReserve+(s.standardAmount.parkingFee||0))));m>0&&c.createReceivable(s.unitNumber,"1302",m,n.date,"一部入金による未収金")}}a().refreshData()}}return s}catch(s){throw o({isProcessing:!1}),s}},processAllUnmatched:async()=>{const{bankTransactions:t}=a(),e=t.filter(r=>r.status==="unprocessed");o({isProcessing:!0});for(const r of e)try{await a().processPaymentMatching(r.id)}catch(n){console.error(`Failed to match transaction ${r.id}:`,n)}o({isProcessing:!1})},manualMatchPayment:async(t,e)=>{const{paymentMatchingService:r,bankTransactions:n}=a();if(!r)throw new Error("Services not initialized");const s=n.find(i=>i.id===t);if(!s)throw new Error("Transaction not found");return r.manualSetUnit("",e,s.description),a().processPaymentMatching(t)},createReceivable:(t,e,r,n,s)=>{const{receivableService:i}=a();if(!i)throw new Error("Services not initialized");const c=i.createReceivable(t,e,r,n,s);return a().refreshData(),c},clearReceivable:(t,e,r)=>{const{receivableService:n}=a();if(!n)throw new Error("Services not initialized");n.clearReceivable(t,e,r),a().refreshData()},updateReceivableSummary:()=>{const{receivableService:t}=a();if(!t)return;const e=t.getReceivableSummary();o({receivableSummary:e})},getReceivablesByUnit:t=>{const{receivableService:e}=a();return e?e.getReceivablesByUnit(t):[]},createJournalFromMatching:async t=>{const{matchingResults:e}=a(),r=e.get(t);if(!r||r.suggestedJournals.length===0)return null;const n=`jnl_${Date.now()}`,{bankImportService:s,bankTransactions:i}=a();if(s){const c=i.find(u=>u.id===r.bankTransactionId);c&&s.updateTransactionStatus(c.id,"processed",n)}return n},setProcessing:t=>{o({isProcessing:t})},refreshData:()=>{const{receivableService:t,bankImportService:e}=a();if(t){const r=t.getAllReceivables(),n=t.getReceivableSummary();o({receivables:r,receivableSummary:n})}if(e){const r=e.getImportedTransactions();o({bankTransactions:r})}},clearAllData:()=>{const{receivableService:t,bankImportService:e}=a();t&&t.clearAll(),e&&e.clearAll(),o({bankTransactions:[],matchingResults:new Map,receivables:[],currentBatchId:null,importResult:null,receivableSummary:null})}}),re=U()(F($(M((o,a,t)=>({...q(o),...B(o,a),...z(o,a),...L(o,a),..._(o,a),...V(o,a),...H(o,a),...X(o,a),...K(o,a),...te(o,a),reset:()=>{a().resetEngine(),o({isLoading:!1,error:null,toastMessage:null,bankAccounts:[],transactions:[],journals:[],selectedTransaction:null,selectedJournal:null,filterCriteria:{},syncResult:null}),console.log("Store reset")},initializeAll:async()=>{o({isLoading:!0});try{a().initializeEngine(),a().initializeBankAccounts(),a().initializeTransactions(),a().loadJournals(),o({isLoading:!1,error:null}),console.log("All services initialized")}catch(e){const r=e instanceof Error?e.message:"Initialization failed";o({isLoading:!1,error:r}),console.error("Initialization error:",e)}}}),{name:"accounting-storage",version:1,partialize:o=>({filterCriteria:o.filterCriteria}),migrate:(o,a)=>o})),{name:"AccountingStore",trace:!0})),ue=()=>{const o=re(),[a,t]=N.useState(null),[e,r]=N.useState("generic"),[n,s]=N.useState([]),[i,c]=N.useState("test");N.useEffect(()=>{o.engine&&o.engine.journalService&&o.engine.accountService&&(o.initializePaymentServices(o.engine.journalService,o.engine.accountService),u("✅ Payment Services初期化完了"))},[o.engine]);const u=d=>{s(f=>[...f,`[${new Date().toLocaleTimeString()}] ${d}`])},m=d=>{var A;const f=(A=d.target.files)==null?void 0:A[0];f&&(t(f),u(`📁 ファイル選択: ${f.name}`))},h=async()=>{if(!a){u("❌ ファイルが選択されていません");return}try{u("🔄 インポート開始..."),u(`  - ファイル: ${a.name}`),u(`  - サイズ: ${(a.size/1024).toFixed(2)} KB`),u(`  - 銀行タイプ: ${e}`);const d=await o.importBankTransactions(a,e);d.imported>0?(u("✅ インポート成功！"),u(`  - 総件数: ${d.total}`),u(`  - インポート: ${d.imported}`),u(`  - 重複: ${d.duplicates}`),u(`  - バッチID: ${d.batchId}`)):(u("⚠️ インポートされたデータがありません"),u(`  - 総件数: ${d.total}`),u(`  - 重複: ${d.duplicates}`)),d.errors&&d.errors.length>0&&(u(`⚠️ エラー: ${d.errors.length}件`),d.errors.slice(0,5).forEach(f=>{u(`  - Row ${f.row}: ${f.message}`)}),d.errors.length>5&&u(`  ... 他 ${d.errors.length-5}件のエラー`))}catch(d){console.error("インポートエラー:",d),u(`❌ インポートエラー: ${d instanceof Error?d.message:String(d)}`)}},p=async()=>{try{u("🔄 全取引の照合処理開始..."),await o.processAllUnmatched(),u("✅ 照合処理完了");const d=o.matchingResults;d.size>0&&(u(`📊 照合結果: ${d.size}件`),d.forEach(f=>{u(`  - ${f.unitNumber||"不明"}: ${f.matchingType} (信頼度: ${(f.confidence*100).toFixed(0)}%)`)}))}catch(d){u(`❌ 照合エラー: ${d}`)}},g=()=>{try{const d=o.createReceivable("101","1301",15e3,"2024-04-30","テスト未収金");u(`✅ 未収金作成: ${d.id}`),u(`  - 住戸: ${d.unitNumber}号室`),u(`  - 金額: ¥${d.amount.toLocaleString()}`)}catch(d){u(`❌ 未収金作成エラー: ${d}`)}},y=async()=>{try{u("🔄 サンプルCSV読み込み中...");const d=await fetch("/sample-bank-statement-phase14.csv");if(!d.ok)throw new Error(`HTTPエラー: ${d.status} ${d.statusText}`);const f=await d.blob();u(`📁 ファイルサイズ: ${(f.size/1024).toFixed(2)} KB`);const A=new File([f],"sample-bank-statement-phase14.csv",{type:"text/csv"});t(A),u("✅ サンプルCSV読み込み完了");const j=await o.importBankTransactions(A,"generic");u(`✅ 自動インポート完了: ${j.imported}件`),j.imported>0&&(u(`  - バッチID: ${j.batchId}`),u(`  - 重複: ${j.duplicates}件`))}catch(d){console.error("サンプル読み込みエラー:",d),u(`❌ サンプル読み込みエラー: ${d instanceof Error?d.message:String(d)}`)}},w=async()=>{u("🚀 完全テストフロー開始"),o.clearAllData(),u("1️⃣ データクリア完了"),await y(),await new Promise(d=>setTimeout(d,1e3)),await p(),g(),o.updateReceivableSummary(),u("5️⃣ サマリー更新完了"),u("🎉 完全テストフロー完了！")},S=()=>l.jsxs("div",{className:"mt-4",children:[l.jsxs("h3",{className:"font-bold mb-2",style:{color:"#2d3748"},children:["銀行取引 (",o.bankTransactions.length,"件)"]}),l.jsx("div",{className:"overflow-x-auto",children:l.jsxs("table",{className:"min-w-full border border-gray-300 bg-white",children:[l.jsx("thead",{className:"bg-gray-50 border-b-2 border-gray-300",children:l.jsxs("tr",{children:[l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"日付"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"摘要"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"入金"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"状態"})]})}),l.jsx("tbody",{className:"bg-white",children:o.bankTransactions.slice(0,10).map(d=>l.jsxs("tr",{className:"hover:bg-gray-50",children:[l.jsx("td",{className:"border border-gray-300 p-2",style:{color:"#2d3748"},children:d.date}),l.jsx("td",{className:"border border-gray-300 p-2",style:{color:"#2d3748"},children:d.description}),l.jsx("td",{className:"border border-gray-300 p-2 text-right",style:{color:"#2d3748"},children:d.amount>0?`¥${d.amount.toLocaleString()}`:"-"}),l.jsx("td",{className:"border border-gray-300 p-2",style:{color:"#2d3748"},children:l.jsx("span",{className:`px-2 py-1 rounded text-xs font-semibold ${d.status==="matched"?"bg-green-100 text-green-800":d.status==="processed"?"bg-blue-100 text-blue-800":"bg-gray-100 text-gray-800"}`,children:d.status})})]},d.id))})]})})]}),T=()=>{const d=Array.from(o.matchingResults.values());return l.jsxs("div",{className:"mt-4",children:[l.jsxs("h3",{className:"font-bold mb-2",style:{color:"#2d3748"},children:["照合結果 (",d.length,"件)"]}),l.jsx("div",{className:"overflow-x-auto",children:l.jsxs("table",{className:"min-w-full border border-gray-300 bg-white",children:[l.jsx("thead",{className:"bg-gray-50 border-b-2 border-gray-300",children:l.jsxs("tr",{children:[l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"住戸"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"照合タイプ"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"金額"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"差額"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"信頼度"})]})}),l.jsx("tbody",{className:"bg-white",children:d.slice(0,10).map(f=>l.jsxs("tr",{className:"hover:bg-gray-50",children:[l.jsx("td",{className:"border border-gray-300 p-2",style:{color:"#2d3748"},children:f.unitNumber||"不明"}),l.jsx("td",{className:"border border-gray-300 p-2",style:{color:"#2d3748"},children:l.jsx("span",{className:`px-2 py-1 rounded text-xs font-semibold ${f.matchingType==="exact"?"bg-green-100 text-green-800":f.matchingType==="partial"?"bg-yellow-100 text-yellow-800":f.matchingType==="over"?"bg-blue-100 text-blue-800":"bg-red-100 text-red-800"}`,children:f.matchingType})}),l.jsxs("td",{className:"border border-gray-300 p-2 text-right",style:{color:"#2d3748"},children:["¥",f.actualAmount.toLocaleString()]}),l.jsx("td",{className:"border border-gray-300 p-2 text-right",style:{color:"#2d3748"},children:f.difference!==0&&l.jsxs("span",{className:f.difference>0?"text-blue-600":"text-red-600",children:[f.difference>0?"+":"","¥",Math.abs(f.difference).toLocaleString()]})}),l.jsxs("td",{className:"border border-gray-300 p-2 text-center",style:{color:"#2d3748"},children:[(f.confidence*100).toFixed(0),"%"]})]},f.id))})]})})]})},x=()=>l.jsxs("div",{className:"mt-4",children:[l.jsxs("h3",{className:"font-bold mb-2",style:{color:"#2d3748"},children:["未収金一覧 (",o.receivables.length,"件)"]}),l.jsx("div",{className:"overflow-x-auto",children:l.jsxs("table",{className:"min-w-full border border-gray-300 bg-white",children:[l.jsx("thead",{className:"bg-gray-50 border-b-2 border-gray-300",children:l.jsxs("tr",{children:[l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"住戸"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"科目"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"金額"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"期日"}),l.jsx("th",{className:"border border-gray-300 p-2 font-medium",style:{color:"#4a5568",backgroundColor:"#f7fafc"},children:"状態"})]})}),l.jsx("tbody",{className:"bg-white",children:o.receivables.slice(0,10).map(d=>l.jsxs("tr",{className:"hover:bg-gray-50",children:[l.jsxs("td",{className:"border border-gray-300 p-2",style:{color:"#2d3748"},children:[d.unitNumber,"号室"]}),l.jsx("td",{className:"border border-gray-300 p-2",style:{color:"#2d3748"},children:d.accountCode==="1301"?"管理費":d.accountCode==="1302"?"修繕積立金":"駐車場"}),l.jsxs("td",{className:"border border-gray-300 p-2 text-right",style:{color:"#2d3748"},children:["¥",d.amount.toLocaleString()]}),l.jsx("td",{className:"border border-gray-300 p-2",style:{color:"#2d3748"},children:d.dueDate}),l.jsx("td",{className:"border border-gray-300 p-2",style:{color:"#2d3748"},children:l.jsx("span",{className:`px-2 py-1 rounded text-xs font-semibold ${d.status==="paid"?"bg-green-100 text-green-800":d.status==="partially_paid"?"bg-yellow-100 text-yellow-800":"bg-red-100 text-red-800"}`,children:d.status})})]},d.id))})]})}),o.receivableSummary&&l.jsxs("div",{className:"mt-4 p-4 bg-white rounded border border-gray-300 shadow-sm",children:[l.jsx("h4",{className:"font-bold mb-2",style:{color:"#2d3748"},children:"未収金サマリー"}),l.jsxs("div",{className:"grid grid-cols-2 gap-2",children:[l.jsx("div",{style:{color:"#718096"},children:"総未収金額:"}),l.jsxs("div",{className:"text-right font-bold",style:{color:"#1a202c"},children:["¥",o.receivableSummary.totalOutstanding.toLocaleString()]}),l.jsx("div",{style:{color:"#718096"},children:"対象住戸数:"}),l.jsxs("div",{className:"text-right",style:{color:"#2d3748"},children:[o.receivableSummary.unitCount,"戸"]}),l.jsx("div",{style:{color:"#718096"},children:"当月分:"}),l.jsxs("div",{className:"text-right",style:{color:"#2d3748"},children:["¥",o.receivableSummary.byAge.current.toLocaleString()]}),l.jsx("div",{style:{color:"#718096"},children:"1ヶ月延滞:"}),l.jsxs("div",{className:"text-right",style:{color:"#2d3748"},children:["¥",o.receivableSummary.byAge.oneMonth.toLocaleString()]})]})]})]});return l.jsxs("div",{className:"p-4 min-h-screen",children:[l.jsx("h2",{className:"text-2xl font-bold mb-4",children:"Phase 14 テストパネル"}),l.jsxs("div",{className:"flex gap-2 mb-4",children:[l.jsx("button",{onClick:()=>c("test"),className:`px-4 py-2 rounded font-medium ${i==="test"?"bg-blue-500 text-white":"bg-gray-200 text-gray-700 hover:bg-gray-300"}`,children:"テスト実行"}),l.jsx("button",{onClick:()=>c("import"),className:`px-4 py-2 rounded font-medium ${i==="import"?"bg-blue-500 text-white":"bg-gray-200 text-gray-700 hover:bg-gray-300"}`,children:"インポート"}),l.jsx("button",{onClick:()=>c("matching"),className:`px-4 py-2 rounded font-medium ${i==="matching"?"bg-blue-500 text-white":"bg-gray-200 text-gray-700 hover:bg-gray-300"}`,children:"照合結果"}),l.jsx("button",{onClick:()=>c("receivables"),className:`px-4 py-2 rounded font-medium ${i==="receivables"?"bg-blue-500 text-white":"bg-gray-200 text-gray-700 hover:bg-gray-300"}`,children:"未収金"})]}),i==="test"&&l.jsxs("div",{children:[l.jsxs("div",{className:"bg-white p-4 rounded border border-gray-300 mb-4 shadow-sm",children:[l.jsx("h3",{className:"font-bold mb-4",style:{color:"#2d3748"},children:"クイックテスト"}),l.jsxs("div",{className:"flex gap-2 flex-wrap",children:[l.jsx("button",{onClick:w,className:"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600",children:"🚀 完全テスト実行"}),l.jsx("button",{onClick:y,className:"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600",children:"📁 サンプルCSV読込"}),l.jsx("button",{onClick:p,className:"bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600",children:"🔍 全取引照合"}),l.jsx("button",{onClick:g,className:"bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600",children:"💰 未収金作成"}),l.jsx("button",{onClick:()=>o.clearAllData(),className:"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600",children:"🗑️ データクリア"})]})]}),l.jsxs("div",{className:"bg-gray-900 text-green-400 p-4 rounded font-mono text-sm h-96 overflow-y-auto border border-gray-700",children:[l.jsx("div",{className:"mb-2 text-yellow-400",children:"== Phase 14 Test Console =="}),n.map((d,f)=>l.jsx("div",{className:"mb-1",children:d},f)),n.length===0&&l.jsx("div",{className:"text-gray-400",children:"テストを実行してください..."})]})]}),i==="import"&&l.jsxs("div",{children:[l.jsxs("div",{className:"bg-white p-4 rounded border border-gray-300 mb-4 shadow-sm",children:[l.jsx("h3",{className:"font-bold mb-4",style:{color:"#2d3748"},children:"CSVインポート"}),l.jsxs("div",{className:"mb-4",children:[l.jsx("label",{className:"block mb-2 font-medium",style:{color:"#4a5568"},children:"銀行タイプ:"}),l.jsxs("select",{value:e,onChange:d=>r(d.target.value),className:"border border-gray-300 p-2 rounded w-full bg-white",style:{color:"#2d3748"},children:[l.jsx("option",{value:"generic",children:"汎用"}),l.jsx("option",{value:"mufg",children:"三菱UFJ銀行"}),l.jsx("option",{value:"smbc",children:"三井住友銀行"}),l.jsx("option",{value:"mizuho",children:"みずほ銀行"})]})]}),l.jsxs("div",{className:"mb-4",children:[l.jsx("label",{className:"block mb-2 font-medium",style:{color:"#4a5568"},children:"CSVファイル:"}),l.jsx("input",{type:"file",accept:".csv",onChange:m,className:"border border-gray-300 p-2 rounded w-full bg-white",style:{color:"#2d3748"}})]}),l.jsx("button",{onClick:h,disabled:!a,className:"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-gray-300",children:"インポート実行"})]}),S()]}),i==="matching"&&T(),i==="receivables"&&x()]})};export{ue as default};
